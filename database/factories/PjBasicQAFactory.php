<?php
/** @var \Illuminate\Database\Eloquent\Factory $factory */
// --------------------------------------------------------------------------
use Carbon\Carbon;
use Faker\Factory as Faker;
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Default faker generated factory
// --------------------------------------------------------------------------
$factory->define( App\Models\PjBasicQA::class, function(){
    // ----------------------------------------------------------------------
    $faker = Faker::create();
    $result = new \stdClass;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->project_id         = 0;
    $result->soil_contamination = $faker->numberBetween( 1, 3 );
    $result->cultural_property  = $faker->numberBetween( 1, 3 );
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // District planning
    // ----------------------------------------------------------------------
    $result->district_planning  = $faker->numberBetween( 1, 2 );
    if( 1 === $result->district_planning ){
        $result->building_use_restrictions = $faker->sentence( 4, true );
        $result->minimum_area              = $faker->randomFloat( 2, 100, 200 );
    }
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->difference_in_height = $faker->numberBetween( 1, 5 );
    $result->retaining_wall       = $faker->numberBetween( 1, 2 );
    // ----------------------------------------------------------------------
    
    // ----------------------------------------------------------------------
    // Retaining wall
    // ----------------------------------------------------------------------
    if( 1 === $result->retaining_wall ){
        $result->retaining_wall_location = $faker->numberBetween( 1, 2 );
        $result->retaining_wall_breakage = $faker->numberBetween( 1, 3 );
    }
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Water supply
    // ----------------------------------------------------------------------
    $result->water_meter       = 0;
    $result->water_supply_pipe = 0;
    $result->water             = $faker->numberBetween( 1, 2 );
    // ----------------------------------------------------------------------
    if( 1 === $result->water ){
        $result->water_meter       = $faker->randomFloat( 2, 100, 200 );
        $result->water_supply_pipe = $faker->randomFloat( 2, 100, 200 );
    }
    // ----------------------------------------------------------------------
    
    // ----------------------------------------------------------------------
    $result->sewage                = $faker->numberBetween( 1, 2 );
    // ----------------------------------------------------------------------
    $result->private_pipe          = (int) $faker->boolean;
    $result->cross_other_land      = (int) $faker->boolean;
    $result->insufficient_capacity = (int) $faker->boolean;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Pole hindrance
    // ----------------------------------------------------------------------
    $result->telegraph_pole_move      = 0;
    $result->telegraph_pole_high_cost = 0;
    $result->telegraph_pole_hindrance = $faker->numberBetween( 1, 2 );
    // ----------------------------------------------------------------------
    if( 1 === $result->telegraph_pole_hindrance ){ // If there is pole hindrance
        $result->telegraph_pole_move      = $faker->numberBetween( 1, 3 );
        $result->telegraph_pole_high_cost = (int) $faker->boolean;
    }
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->width_of_front_road = $faker->numberBetween( 1, 3 );
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Plus factors
    // ----------------------------------------------------------------------
    $result->plus_popular         = (int) $faker->boolean;
    $result->plus_high_price_sale = (int) $faker->boolean;
    $result->plus_others          = $faker->sentence( 4, true );
    // ----------------------------------------------------------------------
    
    // ----------------------------------------------------------------------
    // Minus factors
    // ----------------------------------------------------------------------
    $result->plus_low_price_sale        = (int) $faker->boolean;
    $result->minus_landslide_etc        = (int) $faker->boolean;
    $result->minus_psychological_defect = (int) $faker->boolean;
    $result->minus_others               = $faker->sentence( 4, true );
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Survey
    // ----------------------------------------------------------------------
    $result->fixed_survey_season = 0;
    $result->fixed_survey_reason = 0;
    $result->fixed_survey        = $faker->numberBetween( 1, 4 );
    // ----------------------------------------------------------------------
    if( 3 === $result->fixed_survey ){
        $result->fixed_survey_season = $faker->numberBetween( 1, 2 );
    }
    if( 4 === $result->fixed_survey ){
        $result->fixed_survey_reason = $faker->numberBetween( 1, 2 );
    }
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->contact_requirement = $faker->numberBetween( 1, 2 );
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->created_at = Carbon::now();
    $result->updated_at = Carbon::now();
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    return (array) $result;
    // ----------------------------------------------------------------------
});
// --------------------------------------------------------------------------


// --------------------------------------------------------------------------
// Empty placeholder factory
// --------------------------------------------------------------------------
$factory->state( App\Models\PjBasicQA::class, 'init', function(){
    // ----------------------------------------------------------------------
    $faker = Faker::create();
    $result = new \stdClass;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->project_id         = 0;
    $result->soil_contamination = 0;
    $result->cultural_property  = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // District planning
    // ----------------------------------------------------------------------
    $result->district_planning         = 0;
    $result->building_use_restrictions = 0;
    $result->minimum_area              = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->difference_in_height = 0;
    $result->retaining_wall       = 0;
    // ----------------------------------------------------------------------
    
    // ----------------------------------------------------------------------
    // Retaining wall
    // ----------------------------------------------------------------------
    $result->retaining_wall_location = 0;
    $result->retaining_wall_breakage = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Water supply
    // ----------------------------------------------------------------------
    $result->water_meter       = 0;
    $result->water_supply_pipe = 0;
    $result->water             = 0;
    // ----------------------------------------------------------------------
    
    // ----------------------------------------------------------------------
    $result->sewage                = 0;
    // ----------------------------------------------------------------------
    $result->private_pipe          = 0;
    $result->cross_other_land      = 0;
    $result->insufficient_capacity = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Pole hindrance
    // ----------------------------------------------------------------------
    $result->telegraph_pole_move      = 0;
    $result->telegraph_pole_high_cost = 0;
    $result->telegraph_pole_hindrance = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->width_of_front_road = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Plus factors
    // ----------------------------------------------------------------------
    $result->plus_popular         = 0;
    $result->plus_high_price_sale = 0;
    $result->plus_others          = '';
    // ----------------------------------------------------------------------
    
    // ----------------------------------------------------------------------
    // Minus factors
    // ----------------------------------------------------------------------
    $result->plus_low_price_sale        = 0;
    $result->minus_landslide_etc        = 0;
    $result->minus_psychological_defect = 0;
    $result->minus_others               = '';
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Survey
    // ----------------------------------------------------------------------
    $result->fixed_survey_season = 0;
    $result->fixed_survey_reason = 0;
    $result->fixed_survey        = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->contact_requirement = 0;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    $result->created_at = Carbon::now();
    $result->updated_at = Carbon::now();
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    return (array) $result;
    // ----------------------------------------------------------------------
});
// --------------------------------------------------------------------------


// --------------------------------------------------------------------------
// Empty relations factory
// --------------------------------------------------------------------------
$factory->state( App\Models\PjBasicQA::class, 'init-relations', function(){
    // ----------------------------------------------------------------------
    $result = new \stdClass;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Assign empty arrays to all relations
    // ----------------------------------------------------------------------
    $result->project = (object) array();
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Return the result
    // ----------------------------------------------------------------------
    return (array) $result;
    // ----------------------------------------------------------------------
});
// --------------------------------------------------------------------------
