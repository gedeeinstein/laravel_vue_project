<script> @minify
// --------------------------------------------------------------------------
(function( $, io, document, window, undefined ){
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // Sale plan section
    // ----------------------------------------------------------------------
    Vue.component( 'sale-calculator', {
        // ------------------------------------------------------------------
        props: [ 'value', 'index', 'sheet', 'disabled' ],
        template: '#sale-calculator',
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Reactive data
        // ------------------------------------------------------------------
        data: function(){
            // --------------------------------------------------------------
            var data = {
                entry: this.value
            };
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            return data;
            // --------------------------------------------------------------
        },
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Computed properties
        // ------------------------------------------------------------------
        computed: {
            // --------------------------------------------------------------
            prefix: function(){
                var entry = this.entry;
                return 'sale-calculator-' +( this.index +1 )+ '-';
            },
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            // Find out if this section is disabled
            // --------------------------------------------------------------
            isDisabled: function(){
                return this.disabled || false;
            },
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            // Get average-area of plan-section
            // https://bit.ly/2XxZbUC
            // --------------------------------------------------------------
            averageArea: function(){
                // ----------------------------------------------------------
                var result = null; var entry = this.entry; 
                var checklist = io.get( this, 'sheet.checklist' );
                // ----------------------------------------------------------
                if( checklist && checklist.effective_area ){
                    // ------------------------------------------------------
                    var area = Vue.filter('tsubo')( checklist.effective_area );
                    if( area && entry.sales_divisions ){
                        result = floorDecimal( area / entry.sales_divisions, 2 );
                    }
                    // ------------------------------------------------------
                }
                // ----------------------------------------------------------
                return result;
                // ----------------------------------------------------------
            },
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            // Get sale unit price
            // [Tsubo of S34-1] / ( 1.00 - [S31-2] / 100 ) (round down)
            // https://bit.ly/2K5FSKj
            // --------------------------------------------------------------
            unitPrice: function(){
                // ----------------------------------------------------------
                var result = null; var entry = this.entry;
                var expense = io.get( this, 'sheet.stock' );
                var checklist = io.get( this, 'sheet.checklist' );
                // ----------------------------------------------------------
                if( expense && checklist && entry.rate_of_return ){
                    // ------------------------------------------------------
                    var total = expense.total_budget_cost;
                    var area = Vue.filter('tsubo')( checklist.effective_area );
                    var tsuboBudget = Math.floor( total / area );
                    // ------------------------------------------------------
                    result = Math.floor( tsuboBudget / ( 1.00 - entry.rate_of_return / 100 ));
                    // ------------------------------------------------------
                }
                // ----------------------------------------------------------
                return result;
                // ----------------------------------------------------------
            },
            // --------------------------------------------------------------


            // --------------------------------------------------------------
            // Get sale unit average price
            // [S34-1] / ( 1.00 - [S31-2] / 100 ) / [S31-1] (round down)
            // https://bit.ly/2XJKYDU
            // --------------------------------------------------------------
            unitAveragePrice: function(){
                // ----------------------------------------------------------
                var result = null; var entry = this.entry;
                var expense = io.get( this, 'sheet.stock' );
                // ----------------------------------------------------------
                if( expense && expense.total_budget_cost && entry.rate_of_return && entry.sales_divisions ){
                    var totalBudget = expense.total_budget_cost;
                    result = Math.floor( totalBudget / ( 1.00 - entry.rate_of_return / 100 ) / entry.sales_divisions );
                }
                // ------------------------------------------------------
                return result;
                // ------------------------------------------------------
            },
            // ----------------------------------------------------------
        },
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Watchers
        // ------------------------------------------------------------------
        watch: {
            // --------------------------------------------------------------
            entry: {
                deep: true,
                handler: function( value ){
                    var sale = io.get( this, 'sheet.sale' );
                    if( sale && value.primary ){
                        var updates = io.omit( value, [ 'primary' ]);
                        io.assign( sale, updates );
                    }
                }
            },
            // --------------------------------------------------------------
            averageArea: function( value ){
                this.unit_average_area = value;
            },
            // --------------------------------------------------------------
            unitPrice: function( value ){
                this.sales_unit_price = value;
            },
            // --------------------------------------------------------------
            unitAveragePrice: function( value ){
                this.unit_average_price = value;
            }
            // --------------------------------------------------------------
        },
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Component methods
        // ------------------------------------------------------------------
        methods: {
            // --------------------------------------------------------------
            // Apply primary calculator updates to sheet-sale
            // --------------------------------------------------------------
            setPrimary: function(){
                // ----------------------------------------------------------
                var entry = this.entry; 
                var index = this.index; var sales = io.get( this, 'sheet.sales' );
                // ----------------------------------------------------------
                if( sales && sales.length ){
                    // ------------------------------------------------------
                    if( entry.primary ){
                        $.each( sales, function( s, sale ){ Vue.set( sale, 'primary', false )});
                        Vue.set( entry, 'primary', true );
                    }
                    // ------------------------------------------------------
                    else { // If unchecked
                        if( index == 0 ) vm.$nextTick( function(){ Vue.set( entry, 'primary', true )});
                        else Vue.set( sales[0], 'primary', true );
                    }
                    // ------------------------------------------------------
                }
                // ----------------------------------------------------------
            },
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------
    });
    // ----------------------------------------------------------------------
}( jQuery, _, document, window ));
// --------------------------------------------------------------------------
@endminify </script>