// main: _main.scss

// ==========================================================================
// 	Flexbox
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flexbox display
// --------------------------------------------------------------------------
@mixin flexbox(){
	display: -webkit-box;
  	display: -ms-flexbox;
  	display: flex;
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flexbox inline
// --------------------------------------------------------------------------
@mixin inline-flex(){
	display: -webkit-inline-box;
	display: -ms-inline-flexbox;
	display: inline-flex;
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// The flex shorthand
// - applies to flex items
// <positive-number>, initial, auto, or none
// --------------------------------------------------------------------------
@mixin flex( $grow: 1, $shrink: null, $basis: null ){
	// ----------------------------------------------------------------------
	// Set a variable to be used by box-flex properties
	// ----------------------------------------------------------------------
	$grow-boxflex: $grow;
	// ----------------------------------------------------------------------
	// Box-Flex only supports a flex-grow value so let's grab the
	// first item in the list and just return that.
	// ----------------------------------------------------------------------
	@if type-of( $grow ) == 'list' {
		$grow-boxflex: nth( $grow, 1 );
	}
	// ----------------------------------------------------------------------
	-webkit-box-flex: $grow-boxflex;
	-moz-box-flex: $grow-boxflex;
	-ms-flex: $grow $shrink $basis;
	flex: $grow $shrink $basis;
	// ----------------------------------------------------------------------
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flex Flow Direction
// - applies to flex containers
// row | row-reverse | column | column-reverse
// --------------------------------------------------------------------------
@mixin flex-direction( $direction: row ){
	// ----------------------------------------------------------------------
	@if $direction == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
	}
	// ----------------------------------------------------------------------
	@else if $direction == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
	}
	// ----------------------------------------------------------------------
	@else if $direction == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
	}
	// ----------------------------------------------------------------------
	@else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
	}
	// ----------------------------------------------------------------------
	-ms-flex-direction: $direction;
		flex-direction: $direction;
	// ----------------------------------------------------------------------
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flex Line Wrapping
// - applies to flex containers
// nowrap | wrap | wrap-reverse
// --------------------------------------------------------------------------
@mixin flex-wrap( $wrap: nowrap ){
	// ----------------------------------------------------------------------
	// No Webkit Box fallback.
	// ----------------------------------------------------------------------
	@if $wrap == nowrap { -ms-flex-wrap: none; }
	// ----------------------------------------------------------------------
	@else { -ms-flex-wrap: $wrap; }
	// ----------------------------------------------------------------------
	flex-wrap: $wrap;
	// ----------------------------------------------------------------------
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flex Direction and Wrap
// - applies to flex containers
// <flex-direction> || <flex-wrap>
// --------------------------------------------------------------------------
@mixin flex-flow( $flow: (row nowrap)){
	// No Webkit Box fallback.
	-ms-flex-flow: $flow;
		flex-flow: $flow;
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Display Order
// - applies to flex items
// <integer>
// --------------------------------------------------------------------------
@mixin order( $order: 0 ){
	-webkit-box-ordinal-group: $order + 1;
			   -ms-flex-order: $order;
			   			order: $order;
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flex grow factor
// - applies to flex items
// <number>
// --------------------------------------------------------------------------
@mixin flex-grow( $grow: 0 ){
	 -webkit-box-flex: $grow;
	-ms-flex-positive: $grow;
			flex-grow: $grow;
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flex shrink
// - applies to flex item shrink factor
// <number>
// --------------------------------------------------------------------------
@mixin flex-shrink( $shrink: 1 ){
	-ms-flex-negative: $shrink;
		  flex-shrink: $shrink;
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
// --------------------------------------------------------------------------
@mixin flex-basis( $width: auto ){
	-ms-flex-preferred-size: $width;
				 flex-basis: $width;
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Axis Alignment
// - applies to flex containers
// flex-start | flex-end | center | space-between | space-around
// --------------------------------------------------------------------------
@mixin justify-content( $justify: flex-start ){
	// ----------------------------------------------------------------------
	@if $justify == flex-start {
		-webkit-box-pack: start;
		   -ms-flex-pack: start;
	}
	// ----------------------------------------------------------------------
	@else if $justify == flex-end {
		-webkit-box-pack: end;
		   -ms-flex-pack: end;
	}
	// ----------------------------------------------------------------------
	@else if $justify == space-between {
		-webkit-box-pack: justify;
		   -ms-flex-pack: justify;
	}
	// ----------------------------------------------------------------------
	@else if $justify == space-around {
		-ms-flex-pack: distribute;
	}
	// ----------------------------------------------------------------------
	@else {
		-webkit-box-pack: $justify;
		   -ms-flex-pack: $justify;
	}
	// ----------------------------------------------------------------------
	justify-content: $justify;
	// ----------------------------------------------------------------------
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Packing Flex Lines
// - applies to multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content( $align: stretch ){
	// ----------------------------------------------------------------------
	// No Webkit Box Fallback.
	// ----------------------------------------------------------------------
	@if $align == flex-start { -ms-flex-line-pack: start; }
	// ----------------------------------------------------------------------
	@else if $align == flex-end { -ms-flex-line-pack: end; }
	// ----------------------------------------------------------------------
	@else { -ms-flex-line-pack: $align; }
	// ----------------------------------------------------------------------
	align-content: $align;
	// ----------------------------------------------------------------------
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Cross-axis Alignment
// - applies to flex containers
// flex-start | flex-end | center | baseline | stretch
// --------------------------------------------------------------------------
@mixin align-items( $align: stretch ){
	// ----------------------------------------------------------------------
	@if $align == flex-start {
		-webkit-box-align: start;
		   -ms-flex-align: start;
	}
	// ----------------------------------------------------------------------
	@else if $align == flex-end {
		-webkit-box-align: end;
		   -ms-flex-align: end;
	}
	// ----------------------------------------------------------------------
	@else {
		-webkit-box-align: $align;
		   -ms-flex-align: $align;
	}
	// ----------------------------------------------------------------------
	align-items: $align;
	// ----------------------------------------------------------------------
}
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Cross-axis Alignment
// - applies to flex items
// auto | flex-start | flex-end | center | baseline | stretch
// --------------------------------------------------------------------------
@mixin align-self( $align: auto ){
	// ----------------------------------------------------------------------
	// No Webkit Box Fallback.
	// ----------------------------------------------------------------------
	@if $align == flex-start { -ms-flex-item-align: start; }
	// ----------------------------------------------------------------------
	@else if $align == flex-end { -ms-flex-item-align: end; }
	// ----------------------------------------------------------------------
	@else { -ms-flex-item-align: $align; }
	// ----------------------------------------------------------------------
	align-self: $align;
	// ----------------------------------------------------------------------
}
// --------------------------------------------------------------------------

@mixin flex-center-element(){
	@include flexbox();
	@include flex-direction( column );
	@include justify-content( center );
	@include align-items( center );
}

@mixin flex-left-center(){
	@include flexbox();
	@include flex-direction( column );
	@include justify-content( center );
	// @include align-items( center );
}

@mixin flex-right-center(){
	@include flexbox();
	@include flex-direction( column );
	@include justify-content( center );
	@include align-items( flex-end );
}

// ==========================================================================
