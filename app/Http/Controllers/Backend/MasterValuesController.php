<?php
// --------------------------------------------------------------------------
namespace App\Http\Controllers\Backend;
// --------------------------------------------------------------------------
use Carbon\Carbon;
use App\Helpers\DatatablesHelper;
use App\Http\Controllers\Controller;
use App\Models\MasterValue;
use App\Traits\LogActivityTrait;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Validator;
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Master Values Controller
// --------------------------------------------------------------------------
class MasterValuesController extends Controller {
    // ----------------------------------------------------------------------
    use LogActivityTrait;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    public function __construct(){}
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    protected function validator( array $data ){
        return Validator::make( $data, [
            'type'  => 'required|string|max:64',
            'key'   => 'required|string|max:64',
            'value' => 'required|string|max:256',
            'sort'  => 'required|integer'
        ]);
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    public function show( $param ){
        if( $param == 'json' ){
            $model = MasterValue::where( 'masterdeleted', '<>', true );
            return DatatablesHelper::json( $model, null, null, null, null );
        }
        abort(404);
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Index page
    // ----------------------------------------------------------------------
    public function index(){
        // ------------------------------------------------------------------
        $data = new \stdClass;
        $data->page_title = __('label.master_values');
        // ------------------------------------------------------------------
        return view( 'backend.master.values.index', (array) $data );
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Create page
    // ----------------------------------------------------------------------
    public function create(){
        // ------------------------------------------------------------------
        $data = new \stdClass;
        $data->item = new MasterValue();
        // ------------------------------------------------------------------
        $data->page_type   = 'create';
        $data->page_title  = __('label.add') . ' ' . __('label.master_values');
        $data->form_action = route('master.values.store');
        // ------------------------------------------------------------------
        return view( 'backend.master.values.form', (array) $data );
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Database store
    // ----------------------------------------------------------------------
    public function store( Request $request ){
        // ------------------------------------------------------------------
        $data = $request->all();
        $this->validator( $data )->validate();
        // ------------------------------------------------------------------
        $insert = new MasterValue();
        $insert->created_at = Carbon::now();
        $insert->updated_at = Carbon::now();
        $insert->fill( $data )->save();
        // ------------------------------------------------------------------
        return redirect()
            ->route( 'master.values.index' )
            ->with( 'success', config( 'const.SUCCESS_CREATE_MESSAGE' ));
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Edit page
    // ----------------------------------------------------------------------
    public function edit( $id ){
        // ------------------------------------------------------------------
        $data = new \stdClass;
        $data->item        = MasterValue::where( 'id', $id )->first();
        // ------------------------------------------------------------------
        $data->page_type   = 'edit';
        $data->form_action = route( 'master.values.update', $id );
        $data->page_title  = __( 'label.edit' ) . ' ' . __( 'label.master_values' );
        // ------------------------------------------------------------------
        return view( 'backend.master.values.form', (array) $data );
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Database update
    // ----------------------------------------------------------------------
    public function update( Request $request, $id ){
        // ------------------------------------------------------------------
        $item = MasterValue::find( $id );
        $data = $request->all();
        $data['updated_at'] = Carbon::now();
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Run thru validator
        // ------------------------------------------------------------------
        $this->validator( $data )->validate();
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Update the record
        // ------------------------------------------------------------------
        $item->update( $data );
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        return redirect()
            ->route( 'master.values.edit', $id )
            ->with( 'success', config( 'const.SUCCESS_UPDATE_MESSAGE' ));
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // On delete, do soft deletion
    // ----------------------------------------------------------------------
    public function destroy($id){
        $admin_role = Auth::user()->user_role->name;
        if( 'global_admin' == $admin_role ){
            // --------------------------------------------------------------
            $item = MasterValue::findOrFail($id);
            $item->masterdeleted = true;
            $item->save();
            // --------------------------------------------------------------
            $log = "Delete Master Value, Type: {$item->type} Key: {$item->key}";
            $this->saveLog('Delete Master Value', $log, Auth::user()->id);
            // --------------------------------------------------------------
            return 1;
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------
        return 0;
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------
}
