<?php
// --------------------------------------------------------------------------
namespace App\Http\Controllers\Backend;
// --------------------------------------------------------------------------
use Carbon\Carbon;
use App\Helpers\DatatablesHelper;
use App\Http\Controllers\Controller;
use App\Models\MasterRegion;
use App\Traits\LogActivityTrait;
use Illuminate\Http\Request;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Validator;
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
// Master Values Controller
// --------------------------------------------------------------------------
class MasterRegionsController extends Controller {
    // ----------------------------------------------------------------------
    use LogActivityTrait;
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    public function __construct(){}
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    protected function validator( array $data ){
        return Validator::make( $data, [
            'prefecture_code' => 'required|string|max:4',
            'group_code'      => 'required|string|max:10',
            'name'            => 'required|string|max:128',
            'kana'            => 'required|string|max:128',
            'order'           => 'required|integer'
        ]);
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    public function show( Request $request ){
        // ------------------------------------------------------------------
        $admin_role =  Auth::user()->user_role->name;
        $param = (object) $request->route()->parameters;
        if( !isset( $param->prefecture )) return abort(404);
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Region data
        // ------------------------------------------------------------------
        if( isset( $param->area ) && 'json' == $param->area ){
            // --------------------------------------------------------------
            $model = MasterRegion::where( 'type', 'city' )->orderBy( 'order', 'asc' );
            $model->where( 'prefecture_code', $param->prefecture );
            return DatatablesHelper::json( $model, null, null, null, null );
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        abort(404);
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Index page
    // ----------------------------------------------------------------------
    public function index( Request $request ){
        // ------------------------------------------------------------------
        $param = (object) $request->route()->parameters;
        if( !isset( $param->prefecture )) return abort(404);
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $data = new \stdClass;
        $data->page_title = __('label.master_region');
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $data->param = $param;
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $data->prefectures = array();
        $prefectures = MasterRegion::where( 'type', 'prefecture' )->get();
        if( !$prefectures->isEmpty()) foreach( $prefectures as $prefecture ){
            // --------------------------------------------------------------
            $entry = new \stdClass;
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            $entry->selected = false;
            $entry->id = $prefecture->prefecture_code;
            $entry->label = "{$entry->id} - {$prefecture->name}";
            // --------------------------------------------------------------
            $route = array( 'prefecture' => $entry->id );
            $entry->url = route( 'master.area.index', $route );
            // --------------------------------------------------------------
            if( $param->prefecture == $entry->id ) $entry->selected = true;
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            $data->prefectures[] = $entry;
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        return view( 'backend.master.regions.index', (array) $data );
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Create page
    // ----------------------------------------------------------------------
    public function create( Request $request ){
        // ------------------------------------------------------------------
        $param = (object) $request->route()->parameters;
        if( !isset( $param->prefecture )) return abort(404);
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $admin_role =  Auth::user()->user_role->name;
        if( 'global_admin' == $admin_role ){
            // --------------------------------------------------------------
            $data = new \stdClass;
            $data->param = $param;
            $data->item = new MasterRegion();
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            $data->page_type  = 'create';
            $data->page_title = __('label.add') . ' ' . __('label.master_region');
            // --------------------------------------------------------------
            $data->form_action = route( 'master.area.store', array(
                'prefecture' => $param->prefecture
            ));
            // --------------------------------------------------------------
            $query = MasterRegion::where( 'type', 'prefecture' );
            $data->prefecture = $query->where( 'prefecture_code', $param->prefecture )->first();
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            return view( 'backend.master.regions.form', (array) $data );
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        return redirect()->route('master.area.index', array(
            'prefecture' => $param->prefecture
        ));
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Database store
    // ----------------------------------------------------------------------
    public function store( Request $request ){
        // ------------------------------------------------------------------
        $param = (object) $request->route()->parameters;
        if( !isset( $param->prefecture )) return abort(404);
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $admin_role =  Auth::user()->user_role->name;
        if( 'global_admin' == $admin_role ){
            // --------------------------------------------------------------
            $city = 'government_designated_city';
            $data = (object) $request->all();
            $data->prefecture_code = $param->prefecture;
            // --------------------------------------------------------------
            if( !isset( $data->is_enable )) $data->is_enable = false;
            else $data->is_enable = true;
            // --------------------------------------------------------------
            if( !isset( $data->{$city} )) $data->{$city} = false;
            else $data->{$city} = true;
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            $data = (array) $data;
            $this->validator( $data )->validate();
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            $insert = new MasterRegion();
            $insert->created_at = Carbon::now();
            $insert->updated_at = Carbon::now();
            $insert->fill( $data )->save();
            // --------------------------------------------------------------
            return redirect()
                ->route( 'master.area.index', array(
                    'prefecture' => $param->prefecture
                ))
                ->with( 'success', config( 'const.SUCCESS_CREATE_MESSAGE' ));
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        return redirect()->route( 'master.area.index', array(
            'prefecture' => $param->prefecture
        ));
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Edit page
    // ----------------------------------------------------------------------
    public function edit( Request $request ){
        // ------------------------------------------------------------------
        $param = (object) $request->route()->parameters;
        if( !isset( $param->area ) || !isset( $param->prefecture )) return abort(404);
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $admin_role = Auth::user()->user_role->name;
        if( 'global_admin' == $admin_role ){
            // --------------------------------------------------------------
            $data = new \stdClass;
            $data->param = $param;
            $data->item = MasterRegion::where( 'id', $param->area )->first();
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            $data->page_type  = 'edit';
            $data->page_title = __( 'label.edit' ) . ' ' . __( 'label.master_region' );
            // --------------------------------------------------------------
            $data->form_action = route( 'master.area.update', array(
                'area' => $param->area,
                'prefecture' => $param->prefecture
            ));
            // --------------------------------------------------------------
            $query = MasterRegion::where( 'type', 'prefecture' );
            $data->prefecture = $query->where( 'prefecture_code', $param->prefecture )->first();
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            return view( 'backend.master.regions.form', (array) $data );
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        return redirect()->route( 'master.area.index', array(
            'prefecture' => $param->prefecture
        ));
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // Database update
    // ----------------------------------------------------------------------
    public function update( Request $request ){
        // ------------------------------------------------------------------
        $param = (object) $request->route()->parameters;
        if( !isset( $param->area ) || !isset( $param->prefecture )) return abort(404);
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $admin_role =  Auth::user()->user_role->name;
        if( 'global_admin' == $admin_role ){
            // --------------------------------------------------------------
            $city = 'government_designated_city';
            $item = MasterRegion::find( $param->area );
            // --------------------------------------------------------------
            $data = (object) $request->all();
            $data->updated_at = Carbon::now();
            $data->prefecture_code = $param->prefecture;
            // --------------------------------------------------------------
            if( !isset( $data->is_enable )) $data->is_enable = false;
            else $data->is_enable = true;
            // --------------------------------------------------------------
            if( !isset( $data->{$city} )) $data->{$city} = false;
            else $data->{$city} = true;
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            // Run thru validator
            // --------------------------------------------------------------
            $data = (array) $data;
            $this->validator( $data )->validate();
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            // Update the record
            // --------------------------------------------------------------
            $item->update( $data );
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            return redirect()
                ->route( 'master.area.edit', array(
                    'area' => $param->area,
                    'prefecture' => $param->prefecture
                ))
                ->with( 'success', config( 'const.SUCCESS_UPDATE_MESSAGE' ));
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        return redirect()->route( 'master.area.index', array(
            'prefecture' => $param->prefecture
        ));
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------


    // ----------------------------------------------------------------------
    // On delete, do soft deletion
    // ----------------------------------------------------------------------
    public function destroy( Request $request ){
        // ------------------------------------------------------------------
        $param = (object) $request->route()->parameters;
        if( !isset( $param->area ) || !isset( $param->prefecture )) return abort(404);
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $admin_role =  Auth::user()->user_role->name;
        if( 'global_admin' == $admin_role ){
            // --------------------------------------------------------------
            $item = MasterRegion::findOrFail( $param->area );
            $item->delete();
            // --------------------------------------------------------------
            $log = "Delete Master Region, Name: {$item->name} Prefecture: {$item->prefecture_code}";
            $this->saveLog( 'Delete Master Region', $log, Auth::user()->id );
            // --------------------------------------------------------------
            return 1;
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------
        return 0;
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------
}
